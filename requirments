# Properties: for the Original one.
# The program will:
# -Start
# -Connect to your personal (pets) database
# -Read data
# -Create one (object) instance of a Pets class for each pet listed in your database
  # --The Pets class in a separate file
# -Display a list of pet names, from the pet object instances
# -Ask the user to choose a pet (see below)
# -Once a pet is chosen, print that pet's info from the (object) instance.

# It's time for upgrade:

# Upgrade your Pet Chooser.  Clone your Pet Chooser program to a new PyCharm project.
# At every menu, allow the user to use Q or q to quit your program nicely.
# Initial View
# When the program begins, list all of the pets like before, and ask the user to choose a pet.
# Once a pet is chosen, print out the same information as before.
# Options
# When the pet's information has been displayed, ask the user if they would like to continue or edit the pet's information.
# Example
# You have chosen Minnie, the chameleon. Minnie is 4 years old. Minnie's owner is Curtis.
# Would you like to [C]ontinue, [Q]uit, or [E]dit this pet?
# If the user chooses to quit (by typing Q + [ENTER]), quit the program nicely.
# If the user chooses to continue (by typing C + [ENTER]), display the list of pets again from the Initial View.
# If the user chooses to edit (by typing E + [ENTER]), display the Edit Process below.
# Edit Process
# Once the user chooses to edit a pet's information, ask the user which pet to edit (i.e., Which pet would you like to edit?  The user will provide a number from the Initial View list), step through the pet's name and age to ask the user to provide an update.
# Example
  # You have chosen to edit Minnie.
  # New name: [ENTER == no change]
  # If the user presses [ENTER], the name is unchanged.  If the user types in a new name, update that pet's name in the database.  Display a message indicating the pet's name has been updated.
  # New age: [ENTER == no change]
  # If the user presses [ENTER], the age is unchanged.  If the user types in a new age (check for valid input), update that pet's age in the database.  Display a message indicating the pet's age has been updated.
  # When the updates are complete, display the list of pets again from the Initial View.

# NOTE: We will only edit the pet's name and age.
# NOTE: During the Edit Process, if the user answers QUIT (upper or lower case), quit the program nicely and do not save the updates.
# NOTE: I will log in and run your code to inspect the results.  I will also look at your code.